@model IEnumerable<DesignPatterns.Models.Employee>

@{
    ViewBag.Title = "Index";
}

<h2>Factory Method Design Pattern </h2>
<div class="well">
    <h4>Recap Simple Factory</h4>
    <ul>
        <li>     Simple factory abstracts the creation details of the product</li>
        <li>   Simple factory refers to the newly created object through an interface</li>
        <li>     Any new type creation is handled with a change of code in the factory class and not in the client code</li>
    </ul>
</div>
<div class="well">
    <h4> Business Requirement</h4>
    <ul>
        <li>    Differentiate employees as permanent and contract and segregate their pay scales as well as bonus based on their employee types.  ( We have achieved this using simple factory in Part 8 of the Design Patterns tutorial)</li>
        <li>    Calculate Permanent employee house rent allowance (Not for Conttract employees)</li>
        <li>   Calculate Contract employee medical allowance (Not for Permanent employees)</li>
    </ul>
</div>
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.JobDescription)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Number)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Department)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.Employee_Type.EmployeeType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Bonus)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.HourlyPay)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.MedicalAllowance)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.HouseAllowance)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.JobDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Number)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Department)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Employee_Type.EmployeeType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Bonus)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HourlyPay)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.MedicalAllowance)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HouseAllowance)
            </td>

            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>
